openapi: 3.0.3
info:
  title: Portal Backend API
  description: |
    陽明交通大學單一入口系統後端 API
    
    ## 功能概述
    - 用戶認證與授權
    - TOTP 雙因素認證
    - 郵件服務管理
    - 用戶資訊查詢
    - 系統管理功能
    
    ## 認證方式
    - LDAP 認證
    - JWT Token
    - TOTP 雙因素認證
    
    ## 安全功能
    - 速率限制
    - reCAPTCHA 驗證
    - IP 白名單檢查
    - 帳戶鎖定機制
  version: 1.0.0
  contact:
    name: Portal Development Team
    email: portal-dev@nycu.edu.tw
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://portal.nycu.edu.tw/portal
    description: Prod
  - url: https://portal.test.nycu.edu.tw/portal
    description: Dev
  - url: http://localhost:8000/portal
    description: Local Dev

security:
  - BearerAuth: []
  - ApiKeyAuth: []

paths:
  /sendTOTP:
    post:
      tags:
        - TOTP 認證
      summary: 發送 TOTP 驗證碼
      description: |
        發送 TOTP 驗證碼到指定郵箱
        
        ## 限制條件
        - 最多重送 3 次，超過後鎖定 15 分鐘
        - 每次重送間隔 10 秒冷卻期
        - 需要 reCAPTCHA 驗證
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - email
                - token
                - recaptchaToken
              properties:
                email:
                  type: string
                  format: email
                  description: 用戶郵箱地址
                  example: "user@nycu.edu.tw"
                token:
                  type: string
                  description: 臨時 token
                  example: "abc123def456"
                recaptchaToken:
                  type: string
                  description: reCAPTCHA 驗證 token
                  example: "03AFcWeA..."
      responses:
        '200':
          description: 成功發送 TOTP
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "TOTP has been sent"
                  sent_time:
                    type: integer
                    description: 發送時間戳
                    example: 1748703433
                  retry_after:
                    type: integer
                    description: 下次可重送剩餘秒數
                    example: 60
                  resend_count:
                    type: integer
                    description: 當前重送次數
                    example: 1
                  max_resend_attempts:
                    type: integer
                    description: 最大重送次數
                    example: 3
                  token:
                    type: string
                    description: 新的臨時 token
                    example: "new_token_123"
        '400':
          description: 無效請求
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 無效或過期的 token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 重送次數過多，帳戶被鎖定
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Too many resend attempts, please try again later"
                  lockout_seconds:
                    type: integer
                    description: 鎖定剩餘秒數
                    example: 720
                  resend_count:
                    type: integer
                    example: 3
                  max_resend_attempts:
                    type: integer
                    example: 3
        '422':
          description: 輸入驗證失敗
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: 請求過於頻繁
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 伺服器錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /verifyTOTP:
    post:
      tags:
        - TOTP 認證
      summary: 驗證 TOTP 代碼
      description: |
        驗證用戶輸入的 TOTP 代碼
        
        ## 限制條件
        - 最多錯誤 3 次，超過後鎖定 15 分鐘
        - 需要 reCAPTCHA 驗證
        - TOTP 代碼有效期 5 分鐘
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - email
                - totp_code
                - token
                - recaptchaToken
              properties:
                email:
                  type: string
                  format: email
                  description: 用戶郵箱地址
                  example: "user@nycu.edu.tw"
                totp_code:
                  type: string
                  description: 6 位數 TOTP 驗證碼
                  pattern: '^[0-9]{6}$'
                  example: "123456"
                token:
                  type: string
                  description: 臨時 token
                  example: "abc123def456"
                recaptchaToken:
                  type: string
                  description: reCAPTCHA 驗證 token
                  example: "03AFcWeA..."
      responses:
        '200':
          description: 驗證成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "verify success"
                  token:
                    type: string
                    description: 驗證成功後的 token
                    example: "verified_token_123"
        '400':
          description: 無效請求
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 驗證失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "totp verify failed"
                  fail_count:
                    type: integer
                    description: 當前失敗次數
                    example: 2
                  token:
                    type: string
                    description: 新的臨時 token
                    example: "new_token_123"
                  max_attempts:
                    type: integer
                    description: 最大嘗試次數
                    example: 3
        '403':
          description: 帳戶被鎖定
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Too many requests, please try again later"
                  lockout_seconds:
                    type: integer
                    description: 鎖定剩餘秒數
                    example: 720
        '422':
          description: 輸入驗證失敗
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: 請求過於頻繁
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 伺服器錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /resetPassword:
    post:
      tags:
        - 密碼管理
      summary: 重設密碼
      description: |
        使用 TOTP 驗證後重設用戶密碼
        
        ## 密碼要求
        - 長度至少 8 位
        - 包含大小寫字母、數字和特殊字符
        - 不能與舊密碼相同
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - email
                - newPassword
                - token
                - recaptchaToken
              properties:
                email:
                  type: string
                  format: email
                  description: 用戶郵箱地址
                  example: "user@nycu.edu.tw"
                newPassword:
                  type: string
                  description: 新密碼
                  minLength: 8
                  example: "NewP@ssw0rd123"
                token:
                  type: string
                  description: 重設密碼 token
                  example: "reset_token_123"
                recaptchaToken:
                  type: string
                  description: reCAPTCHA 驗證 token
                  example: "03AFcWeA..."
      responses:
        '200':
          description: 密碼重設成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Password reset successfully"
        '400':
          description: 無效請求
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 無效或過期的 token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: 密碼不符合要求
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: 請求過於頻繁
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 伺服器錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/login:
    post:
      tags:
        - 用戶認證
      summary: 用戶登入 (v1)
      description: |
        使用 LDAP 進行用戶認證，支援雙因素認證流程

        ## 認證流程
        1. 驗證 reCAPTCHA token
        2. 驗證用戶帳號密碼 (LDAP)
        3. 檢查帳戶狀態 (是否禁用)
        4. 檢查網路位置 (校內/校外)
        5. 判斷是否需要雙因素認證
        6. 返回結果：
           - 需要 2FA: 返回 Pre-Auth Token
           - 不需要 2FA: 返回完整登入資訊

        ## 網路位置與 2FA 邏輯
        - **校外登入**:
          - 有設定 2FA → 要求 2FA 驗證
          - 無設定 2FA → 拒絕登入 (需使用 VPN)
        - **校內登入**:
          - 無設定 2FA → 直接登入
          - 有設定 2FA 且 AlwaysVerify=Y → 要求 2FA
          - 有設定 2FA 且 AlwaysVerify=N → 檢查信任裝置

        ## 安全功能
        - 登入失敗記錄與延遲機制
        - 3次失敗後開始延遲 (指數退避)
        - 密碼過期檢查 (180天)
        - 裝置指紋追蹤

      security: []

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - pwd
                - recaptchaToken
              properties:
                id:
                  type: string
                  description: 用戶帳號 (學號或人事代號)
                  example: "E00001"
                  minLength: 1
                pwd:
                  type: string
                  description: 用戶密碼
                  format: password
                  example: "MyP@ssw0rd"
                  minLength: 1
                recaptchaToken:
                  type: string
                  description: Google reCAPTCHA v3 驗證 token
                  example: "03AGdBq24..."
                deviceInfo:
                  type: string
                  description: 裝置指紋資訊 (JSON 字串格式)
                  example: '{"fingerPrint": "abc123def456"}'

      responses:
        '200':
          description: 登入成功或需要雙因素認證
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/LoginDirectSuccessResponse'
                  - $ref: '#/components/schemas/PreAuthTokenResponse'
              examples:
                directLogin:
                  summary: 直接登入成功 (無需 2FA)
                  value:
                    id: "E00001"
                    name: "王小明"
                    dept: "資訊工程學系"
                    mail: "e00001@nycu.edu.tw"
                    idStatus: "1"
                    ou: "STUDENT"
                    "2fa": false
                    token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

                require2FA:
                  summary: 需要雙因素認證
                  value:
                    "2fa": true
                    token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    methods: ["mobile-app", "email"]
                    expires_in: 180

        '400':
          description: 無效請求 - 缺少必要欄位
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: "error"
                message: "Missing required fields: id, pwd, recaptchaToken"
                statusCode: 400

        '403':
          description: 禁止訪問 - 校外無 2FA 或帳戶被鎖定
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                offCampusNo2FA:
                  summary: 校外登入但未設定 2FA
                  value:
                    status: "error"
                    message: "Please use VPN or configure two-factor authentication to login from off-campus"
                    statusCode: 403

        '404':
          description: 帳戶不存在、未啟用或密碼錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidCredentials:
                  summary: 帳號密碼錯誤
                  value:
                    status: "error"
                    message: "Invalid credentials or account not activated"
                    statusCode: 404

                accountDisabled:
                  summary: 帳戶已停用
                  value:
                    status: "error"
                    message: "Account not activated"
                    statusCode: 404

                passwordExpired:
                  summary: 密碼已過期
                  value:
                    status: "error"
                    message: "Password expired, please change password"
                    statusCode: 404

                tooManyAttempts:
                  summary: 登入嘗試次數過多
                  value:
                    status: "error"
                    message: "Too many failed attempts, please try again later"
                    statusCode: 404

        '500':
          description: 伺服器錯誤 - LDAP 連線失敗或系統錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                systemError:
                  summary: 系統錯誤
                  value:
                    status: "error"
                    message: "System error, please try again later"
                    statusCode: 500

  /PortalLdapLogin:
    post:
      tags:
        - 用戶認證
      summary: LDAP 登入
      description: |
        使用 LDAP 進行用戶認證
        
        ## 認證流程
        1. 驗證用戶名和密碼
        2. 檢查帳戶狀態
        3. 檢查是否需要雙因素認證
        4. 返回 JWT token 或要求 2FA
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - id
                - pwd
                - recaptchaToken
              properties:
                id:
                  type: string
                  description: 用戶 ID
                  example: "12345678"
                pwd:
                  type: string
                  description: 用戶密碼
                  example: "userpassword"
                recaptchaToken:
                  type: string
                  description: reCAPTCHA 驗證 token
                  example: "03AFcWeA..."
                deviceInfo:
                  type: string
                  description: 設備資訊 (JSON 格式)
                  example: '{"fingerPrint": "device_hash_123"}'
      responses:
        '200':
          description: 登入成功
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/LoginSuccessResponse'
                  - $ref: '#/components/schemas/TwoFactorRequiredResponse'
        '400':
          description: 無效請求
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 認證失敗
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 帳戶不存在或未啟用
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: 請求過於頻繁
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /TwofaLogin:
    post:
      tags:
        - 雙因素認證
      summary: 雙因素認證登入
      description: |
        完成雙因素認證流程
        
        ## 流程
        1. 驗證 TOTP 代碼
        2. 檢查設備指紋
        3. 返回完整的用戶資訊和 token
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - token
                - totp_code
                - recaptchaToken
              properties:
                token:
                  type: string
                  description: 2FA token
                  example: "2fa_token_123"
                totp_code:
                  type: string
                  description: TOTP 驗證碼
                  pattern: '^[0-9]{6}$'
                  example: "123456"
                recaptchaToken:
                  type: string
                  description: reCAPTCHA 驗證 token
                  example: "03AFcWeA..."
      responses:
        '200':
          description: 2FA 驗證成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccessResponse'
        '400':
          description: 無效請求
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 驗證失敗
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: 請求過於頻繁
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /getUserInfo:
    post:
      tags:
        - 用戶資訊
      summary: 獲取用戶資訊
      description: |
        獲取當前登入用戶的詳細資訊
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  description: JWT token
                  example: "jwt_token_123"
      responses:
        '200':
          description: 成功獲取用戶資訊
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
        '401':
          description: 無效或過期的 token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 用戶不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /checkMail:
    post:
      tags:
        - 郵件服務
      summary: 檢查郵件帳戶狀態
      description: |
        檢查用戶的郵件帳戶狀態和設定
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  description: JWT token
                  example: "jwt_token_123"
      responses:
        '200':
          description: 成功獲取郵件資訊
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailInfoResponse'
        '401':
          description: 無效或過期的 token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /relay:
    post:
      tags:
        - 系統服務
      summary: 系統轉發服務
      description: |
        轉發請求到其他校內系統
        
        ## 限制
        - 僅限校內 IP 訪問
        - 需要 VPN 連接
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - url
                - token
                - sysDirect
              properties:
                url:
                  type: string
                  description: 目標系統 URL
                  example: "https://system.nycu.edu.tw"
                token:
                  type: string
                  description: 用戶 token
                  example: "user_token_123"
                sysDirect:
                  type: string
                  description: 系統識別碼
                  example: "student_system"
      responses:
        '200':
          description: 轉發成功
          content:
            text/html:
              schema:
                type: string
        '403':
          description: 需要 VPN 連接
          content:
            text/html:
              schema:
                type: string
        '405':
          description: 不允許的 URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Token 認證
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API Key 認證

  schemas:
    ErrorResponse:
      type: object
      properties:
        status:
          type: boolean
          example: false
        message:
          type: string
          description: 錯誤訊息
          example: "Invalid request"
        statusCode:
          type: integer
          description: HTTP 狀態碼
          example: 400

    LoginSuccessResponse:
      type: object
      properties:
        id:
          type: string
          description: 用戶 ID
          example: "12345678"
        name:
          type: string
          description: 用戶姓名
          example: "張三"
        dept:
          type: string
          description: 部門
          example: "資訊工程學系"
        mail:
          type: string
          format: email
          description: 郵箱地址
          example: "user@nycu.edu.tw"
        idStatus:
          type: string
          description: 帳戶狀態
          example: "active"
        ou:
          type: string
          description: 組織單位
          example: "student"
        token:
          type: string
          description: JWT token
          example: "jwt_token_123"
        loginInfo:
          type: object
          description: 登入資訊
        deviceInfo:
          type: object
          description: 設備資訊

    TwoFactorRequiredResponse:
      type: object
      properties:
        '2fa':
          type: boolean
          example: true
        token:
          type: string
          description: 2FA token
          example: "2fa_token_123"

    LoginDirectSuccessResponse:
      type: object
      description: 直接登入成功響應 (無需 2FA)
      properties:
        id:
          type: string
          description: 用戶 ID
          example: "E00001"
        name:
          type: string
          description: 用戶姓名
          example: "王小明"
        dept:
          type: string
          description: 部門/系所
          example: "資訊工程學系"
        mail:
          type: string
          format: email
          description: 郵箱地址
          example: "e00001@nycu.edu.tw"
        idStatus:
          type: string
          description: 帳戶狀態 (1=啟用)
          example: "1"
        ou:
          type: string
          description: 組織單位 (STUDENT/STAFF/FACULTY)
          example: "STUDENT"
        '2fa':
          type: string
          description: 2FA 狀態
          enum: ["enable", "disable"]
          example: "disable"
        token:
          type: string
          description: JWT 完整登入 token
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IkUwMDAwMSIsIm9sZGlkIjoiRTAwMDAxIiwib3UiOiJTVFVERU5UIiwiaWF0IjoxNzMwMDAwMDAwfQ..."

    PreAuthTokenResponse:
      type: object
      description: Pre-Auth Token 響應 (需要 2FA 驗證)
      required:
        - 2fa
        - token
        - methods
        - expires_in
      properties:
        '2fa':
          type: boolean
          description: 是否需要 2FA
          example: true
        token:
          type: string
          description: |
            Pre-Auth Token (JWT 格式)

            Payload 包含：
            - sub: 用戶 ID
            - scope: "2fa_pending"
            - jti: 唯一 token ID
            - iat: 簽發時間
            - exp: 過期時間 (3分鐘)
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJFMDAwMDEiLCJzY29wZSI6IjJmYV9wZW5kaW5nIiwianRpIjoiYTFiMmMzZDRlNWY2IiwiaWF0IjoxNzMwMDAwMDAwLCJleHAiOjE3MzAwMDAxODB9..."
        methods:
          type: array
          description: 可用的 2FA 驗證方法
          items:
            type: string
            enum: ["mobile-app", "email"]
          example: ["mobile-app", "email"]
        expires_in:
          type: integer
          description: Token 過期時間 (秒)
          example: 180

    UserInfoResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        data:
          type: object
          properties:
            id:
              type: string
              example: "12345678"
            name:
              type: string
              example: "張三"
            dept:
              type: string
              example: "資訊工程學系"
            mail:
              type: string
              format: email
              example: "user@nycu.edu.tw"
            mobile:
              type: string
              example: "0912345678"
            title:
              type: string
              example: "學生"
            birthday:
              type: string
              format: date
              example: "1990-01-01"

    MailInfoResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        data:
          type: object
          properties:
            email:
              type: string
              format: email
              example: "user@nycu.edu.tw"
            status:
              type: string
              example: "active"
            quota:
              type: integer
              example: 1073741824
            used:
              type: integer
              example: 536870912
            lastLogin:
              type: string
              format: date-time
              example: "2024-12-01T10:30:00Z"

tags:
  - name: TOTP 認證
    description: 雙因素認證相關 API
  - name: 用戶認證
    description: 用戶登入和認證相關 API
  - name: 雙因素認證
    description: 2FA 相關 API
  - name: 密碼管理
    description: 密碼重設和管理相關 API
  - name: 用戶資訊
    description: 用戶資訊查詢相關 API
  - name: 郵件服務
    description: 郵件帳戶管理相關 API
  - name: 系統服務
    description: 系統轉發和其他服務 API